version: "3.8"

services:

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - django-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./docker/clickhouse/clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    networks:
      - django-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - django-network

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django-app
    restart: always
    working_dir: /app
    depends_on:
      - db
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - django-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery-worker
    restart: always
    depends_on:
      - django
      - redis
      - rabbitmq
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - django-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - django
    volumes:
      - static_volume:/app/staticfiles
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - django-network

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - django-network

volumes:
  clickhouse_data:
  static_volume:
  pg_data:

networks:
  django-network:
    driver: bridge